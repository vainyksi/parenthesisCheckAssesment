Index: src/test/java/org/example/parenthesis/check/assesment/ParenthesisCheckTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/parenthesis/check/assesment/ParenthesisCheckTest.java b/src/test/java/org/example/parenthesis/check/assesment/ParenthesisCheckTest.java
--- a/src/test/java/org/example/parenthesis/check/assesment/ParenthesisCheckTest.java	(date 1698876150944)
+++ b/src/test/java/org/example/parenthesis/check/assesment/ParenthesisCheckTest.java	
@@ -15,10 +15,10 @@
         Stack<Character> parenthesisConsumed = new Stack<>();
         for (int i = 0; i < str.length(); i++) {
             Character character = str.charAt(i);
-            if (isStartCharacter(character)) {
+            if (isParenthesisStart(character)) {
                 parenthesisConsumed.push(character);
             } else {
-                if (isEndCharacter(character)) {
+                if (isEndParenthesis(character)) {
                     if (parenthesisConsumed.isEmpty()) {
                         return WRONG;
                     }
@@ -45,11 +45,11 @@
         return false;
     }
 
-    private static boolean isEndCharacter(Character character) {
+    private static boolean isEndParenthesis(Character character) {
         return Set.of(')', ']', '}').contains(character);
     }
 
-    private static boolean isStartCharacter(Character character) {
+    private static boolean isParenthesisStart(Character character) {
         return Set.of('(', '[', '{').contains(character);
     }
 
